using AutoMapper;
using chat.Services.Abstract;
using chat.Services.Models;
using chat.WebAPI.Models;
using Microsoft.AspNetCore.Mvc;

namespace chat.WebAPI.Controllers
{
    /// <summary>
    /// Attachment endpoints
    /// </summary>
    [ProducesResponseType(200)]
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public class AttachmentsController : ControllerBase
    {
        private readonly IAttachmentService AttachmentService;
        private readonly IMapper mapper;

        /// <summary>
        /// Attachment controller
        /// </summary>
        public AttachmentsController(IAttachmentService AttachmentService, IMapper mapper)
        {
            this.AttachmentService = AttachmentService;
            this.mapper = mapper;
        }

        /// <summary>
        /// Get Attachments by pages
        /// </summary>
        /// <returns></returns>
        [HttpGet]
        public IActionResult GetAttachments([FromQuery] int limit = 20, [FromQuery] int offset = 0)
        {
            var pageModel = AttachmentService.GetAttachments(limit, offset);
            return Ok(mapper.Map<PageResponse<AttachmentResponse>>(pageModel));
        }

        /// <summary>
        /// Update Attachment
        /// </summary>
        [HttpPut]
        [Route("{id}")]
        public IActionResult UpdateAttachment([FromRoute] Guid id, [FromBody] UpdateAttachmentRequest model)
        {
            var validationResult = model.Validate();
            if (!validationResult.IsValid)
            {
                return BadRequest(validationResult.Errors);
            }
            try
            {
                var resultModel = AttachmentService.UpdateAttachment(id, mapper.Map<UpdateAttachmentModel>(model));

                return Ok(mapper.Map<AttachmentResponse>(resultModel));
            }
            catch (Exception ex)
            {
                return BadRequest(ex.ToString());
            }
        }

        /// <summary>
        /// Delete Attachment
        /// </summary>
        [HttpDelete]
        [Route("{id}")]
        public IActionResult DeleteAttachment([FromRoute] Guid id)
        {
            try
            {
                AttachmentService.DeleteAttachment(id);
                return Ok();
            }
            catch (Exception ex)
            {
                return BadRequest(ex.ToString());
            }
        }

        /// <summary>
        /// Get Attachment
        /// </summary>
        [HttpGet]
        [Route("{id}")]
        public IActionResult GetAttachment([FromRoute] Guid id)
        {
            try
            {
                var AttachmentModel = AttachmentService.GetAttachment(id);
                return Ok(mapper.Map<AttachmentResponse>(AttachmentModel));
            }
            catch (Exception ex)
            {
                return BadRequest(ex.ToString());
            }
        }
        /// <summary>
        /// Add Attachment
        /// </summary>
        /// <returns></returns>
        [HttpPost]
        public IActionResult AddAttachment([FromBody] AttachmentModel Attachment)
        {
            var response = AttachmentService.AddAttachment(Attachment);
            return Ok(response);
        }

    }
}